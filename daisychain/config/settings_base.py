"""
Django settings for daisychain project.

Generated by 'django-admin startproject' using Django 1.9.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import django
from datetime import timedelta

from config.keys import keys
from config.host import SITE_ID


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# calculated paths for django and the site
# used as starting points for various other paths
DJANGO_ROOT = os.path.dirname(os.path.realpath(django.__file__))
SITE_ROOT = os.path.dirname(os.path.realpath(__file__))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

ALLOWED_HOSTS = []
# Application definition

INSTALLED_APPS = [
    'django.contrib.sites',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.humanize',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'nocaptcha_recaptcha',
    'bootstrap3',
    'core',
    'home',
    'recipes',
    'channels',
    'useradmin',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'channel_clock',
    'channel_dropbox',
    'channel_twitter',
    'channel_instagram',
    'channel_github',
    'channel_hue',
    'channel_mail',
    'channel_facebook',
    'channel_rss',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',
    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
)


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.'
                'UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.'
                'MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.'
                'CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.'
                'NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/


STATIC_URL = '/static/'

# directory where all static files would be located
STATIC_ROOT = os.path.join(BASE_DIR, 'assets/')


# One-week activation window
# ACCOUNT_ACTIVATION_DAYS = 7

# Automatically log the user in.
# REGISTRATION_AUTO_LOGIN = True

# The page you want users to arrive at after they successful log in
# LOGIN_REDIRECT_URL = '/home'

# The page users are directed to if they are not logged in,
# LOGIN_URL = '/account/login/'


# ###### Celery #######

BROKER_URL = 'amqp://localhost//'

CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TRACK_STARTED = True
CELERY_ENABLE_UTC = True
CELERY_TIMEZONE = 'Europe/London'

CELERYBEAT_SCHEDULE = {
    'fetch_rss_feeds': {
        'task': 'channel_rss.tasks.fetch_rss_feeds',
        'schedule': timedelta(minutes=10),
    },
    'clock_channel': {
        'task': 'channel_clock.tasks.beat',
        'schedule': timedelta(minutes=15),
    }
}
# #######################

# ########## Account #############
# # http://django-allauth.readthedocs.io/en/latest/configuration.html

LOGIN_URL = '/accounts/login/'
LOGOUT_URL = '/accounts/logout/'

LOGIN_REDIRECT_URL = '/home/'

ACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS = True
ACCOUNT_AUTHENTICATION_METHOD = "username_email"
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 3
ACCOUNT_EMAIL_CONFIRMATION_HMAC = True
ACCOUNT_EMAIL_VERIFICATION = "mandatory"
ACCOUNT_LOGIN_ATTEMPTS_LIMIT = 5
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT = 300
ACCOUNT_PASSWORD_MIN_LENGTH = 8
ACCOUNT_SIGNUP_EMAIL_ENTER_TWICE = False
ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = True

ACCOUNT_FORMS = {
    'signup': 'home.forms.CaptchaSignupForm',
    'reset_password': 'home.forms.SilentResetPasswordForm'
}

# ################################

# ######## reCaptcha #############
NORECAPTCHA_SITE_KEY = keys['reCaptcha']['SITE_KEY']
NORECAPTCHA_SECRET_KEY = keys['reCaptcha']['SECRET_KEY']
